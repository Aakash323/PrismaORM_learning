// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  createdAt DateTime  @default(now())
  password  String
  purchases Product[] @relation("UserPurchases")  // user can purchase multiple products
  reviews   Review[]      // user can give multiple reviews and name is used when a model has many relations.
}

model Product {
  pid       Int       @id @default(autoincrement())
  pname     String
  price     Int
  user_id   Int
  user      User      @relation("UserPurchases", fields: [user_id], references: [id], onDelete: Cascade) //cascade are used so when parent is deleted child also deletes
  reviews   Review[]
}

model Review {
  rid         Int       @id @default(autoincrement())
  rev         String
  review_u_id Int
  review_p_id Int
  user        User      @relation(fields: [review_u_id], references: [id], onDelete: Cascade)
  product     Product   @relation(fields: [review_p_id], references: [pid], onDelete: Cascade)
  createdAt   DateTime  @default(now())
    @@unique([review_u_id, review_p_id])
}

